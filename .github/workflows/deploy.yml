name: Build and Deploy ASP.NET Core MVC to Remote IIS

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: 🔧 Build and Publish
    runs-on: windows-latest

    steps:
      - name: "✅ Checkout Code"
        uses: actions/checkout@v3

      - name: "🛠 Setup .NET SDK"
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: "📦 Build and Publish"
        run: |
          mkdir logs
          echo "🔄 Restoring..."
          dotnet restore | Tee-Object -FilePath logs/restore.log

          echo "🏗 Building..."
          dotnet build --configuration Release | Tee-Object -FilePath logs/build.log

          echo "🚀 Publishing..."
          dotnet publish --configuration Release --output publish_output | Tee-Object -FilePath logs/publish.log

      - name: "☁ Upload Published App"
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: publish_output

      - name: "☁ Upload Build Logs"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: logs

  deploy:
    name: 🚀 Deploy to IIS
    needs: build
    runs-on: windows-latest

    steps:
      - name: "⬇ Download Published App"
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: publish_output

      - name: "📤 Deploy to Remote IIS via PowerShell + WinRM"
        shell: pwsh
        run: |
          $username = "${{ secrets.IIS_USERNAME }}"
          $password = ConvertTo-SecureString "${{ secrets.IIS_PASSWORD }}" -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential($username, $password)
          $server = "${{ secrets.IIS_SERVER }}"
          $sitePath = "${{ secrets.IIS_SITE_PATH }}"
          $sourcePath = Join-Path $env:GITHUB_WORKSPACE 'publish_output'
           
           # Allow connecting to non-domain servers
          Set-Item WSMan:\localhost\Client\TrustedHosts -Value $server -Force

          Write-Output "💻 Connecting to $server ..."
          Invoke-Command -ComputerName $server -Credential $cred -ScriptBlock {
              param ($sitePath, $sourcePath)

              Write-Output "🧹 Cleaning site path: $sitePath"
              Remove-Item "$sitePath\*" -Recurse -Force -ErrorAction SilentlyContinue

              Write-Output "📁 Copying files..."
              Copy-Item -Path $sourcePath\* -Destination $sitePath -Recurse -Force

              Write-Output "♻ Restarting IIS..."
              iisreset

              Write-Output "✅ Deployment complete"
          } -ArgumentList $sitePath, $sourcePath
           
